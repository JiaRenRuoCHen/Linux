准备MHA集群环境
步骤一： 配置ssh免密登录
1）配置数据库服务器 (每台数据库服务器都需要建立ssh免密登录)
	]# ssh-keygen //创建秘钥对
	Generating public/private rsa key pair.
	Enter file in which to save the key (/root/.ssh/id_rsa): //回车
	Enter passphrase (empty for no passphrase): //回车
	]# ssh-copy-id root@192.168.4.52 //传递公钥给主机


步骤二： 安装依赖包(每一台数据库服务器都需要安装)
1）配置数据库服务器
	]# yum -y install perl-* //安装系统自带的perl软件包
	]# cd mha-soft-student	
	]# yum –y install perl-* //安装共享的perl软件包


步骤三： 配置MySQL一主多从结构
1）配置主服务器
	]# vim /etc/my.cnf
	[mysqld]
	log-bin=master51 //日志名
	server_id=51 //指定server_id
	]# systemctl  restart  mysqld
	]# mysql  -uroot  -p123qqq…A
	mysql> grant  replication slave  on  *.*  to repluser@"%"  identified by “123qqq…A"; //添加从服务器同步数据连接用户

2）配置从服务器 (两台服务器都做)
	]# vim /etc/my.cnf
	[mysqld]
	server_id=52 //指定server_id
	]# systemctl restart mysqld //重启数据库服务
	]# mysql -uroot –p123qqq…A //数据库管理员登录
	mysql> change master to //指定主服务器信息
	master_host="192.168.4.51", //IP地址
	master_user="repluser", //授权用户
	master_password="123qqq...A", //授权用户密码
	master_log_file="master51.000001", //binlog日志
	master_log_pos=441; //偏移量   查看主服务器的bin_log日志
	mysql> start slave; //启动slave进程

	]# mysql -uroot –p123qqq…A –e “show slave status\G” | grep –i yes 	//查看从服务器状态
	Slave_IO_Running: Yes //I0线程正常
	Slave_SQL_Running: Yes //SQL线程正常



部署MHA集群
步骤一：配置管理节点(管理集群服务器主机)
1）安装软件
	]# rpm -ivh  mha4mysql-node-0.56-0.el6.noarch.rpm//安装mha-node软件包
	]# rpm -qa | grep  mha //查看是否安装成功
	]# tar -zxvf mha4mysql-manager-0.56.tar.gz //解压mha-manager软件包
	]# cd mha4mysql-manager-0.56  //进入源码目录
	]# perl Makefile.PL //配置
	]#  make //编译
	]#  make install //安装	
	]# ls /root/perl5/bin  //查看安装的命令


2）编辑主配置文件
	]#  mkdir  /etc/mha  //创建工作目录
	]#  cp mha4mysql-manager-0.56/sample/conf/app1.cnf /etc/mha/ //拷贝模板文件
	]#  vim /etc/mha/app1.cnf   //编辑主配置文件
	  [server default]     //管理服务默认配置
                manager_workdir=/etc/mha    //工作目录
                manager_log=/etc/mha/manager.log   //日志文件
                master_ip_failover_script=/etc/mha/master_ip_failover //故障切换脚本
                ssh_user=root  //访问ssh服务用户
                ssh_port=22    //ssh服务端口
                repl_user=repluser           //主服务器数据同步授权用户
                repl_password=123qqq…A    //密码
                user=root                   //监控用户
                password=123qqq…A               //密码
        [server1]   //指定第1台数据库服务器
	  hostname=192.168.4.51    //服务器ip地址
	  port=3306                //服务端口
	  candidate_master=1               //竞选主服务器

	  [server2]  //指定第2台数据库服务器
	  hostname=192.168.4.52
	  port=3306
	  candidate_master=1  
            
	  [server3]  //指定第3台数据库服务器
	  hostname=192.168.4.53
	  port=3306
	  candidate_master=1


3）创建故障切换脚本
	]# cp mha-soft-student/master_ip_failover /etc/mha/
	]# vim +35 /etc/mha/master_ip_failover
	my $vip = '192.168.4.100/24';  # Virtual IP  //定义VIP地址
	my $key = "1"; //定义变量$key
	my $ssh_start_vip = "/sbin/ifconfig eth0:$key $vip"; //部署vip地址命令
	my $ssh_stop_vip = "/sbin/ifconfig eth0:$key down"; //释放vip地址命令
	]# chmod +x  /etc/mha/master_ip_failover //给脚本加执行权限

4）在当前主服务器部署vip地址(主数据库服务器)
	]# ifconfig  eth0:1  //部署之前查看 
	]# ifconfig  eth0:1  192.168.4.100  //部署vip地址
	]# ifconfig  eth0:1 //部署后查看


步骤二：配置数据节点
1）在所有数据库服务器上，安装mha-node软件包
	]# cd /root/mha-soft-student/
	]#  rpm -ivh mha4mysql-node-0.56-0.el6.noarch.rpm

2）在所有数据服务器上添加监控用户
可以只在主数据库服务器主机执行授权命令，从数据库服务器会自动同步授权
	]# mysql –uroot –p密码
	mysql> grant all on  *.*  to root@"%" identified by "123qqq...A";

3）在2台从服务器上添加，数据同步连接用户
在从服务器主机添加用户
	]# mysql –uroot –p密码
	mysql> grant replication slave on  *.*  to repluser@"%" identified by "123qqq...A";


4）修改数据库服务运行参数
修改三台数据库服务器
	]# vim /etc/my.cnf
	[mysqld]
	plugin-load="rpl_semi_sync_master=semisync_master.so;rpl_semi_sync_slave=semisync_slave.so" //加载模块
	rpl_semi_sync_master_enabled=1  //启用master模块
	rpl_semi_sync_slave_enabled=1     //启用slave模块
	relay_log_purge=0   //禁止自动删除中继日志文件
	]#  systemctl  restart  mysqld  //重启服务



测试配置
步骤一：测试集群环境
1）在管理主机，测试ssh配置
	]# masterha_check_ssh --conf=/etc/mha/app1.cnf //执行测试命令

2）在管理主机，测试主从同步
	]# masterha_check_repl --conf=/etc/mha/app1.cnf //执行测试命令

3）启动管理服务
	]# masterha_manager --conf=/etc/mha/app1.cnf  --remove_dead_master_conf --ignore_last_failover //执行启动命令

4）查看服务状态
	]#  masterha_check_status  --conf=/etc/mha/app1.cnf//执行命令



修复故障服务器
1）配置数据库服务器
启动故障主机的数据库服务
	]# systemctl  start  mysqld

与主数据库服务器数据一致
	]#  mysqldump -uroot -p123qqq...A  --master-data  db9 > db9.sql //在主数据库服务器做完全备份
	]# scp db9.sql  root@192.168.4.51:/root/  //拷贝备份文件给故障主机
	]# mysql -uroot -p123qqq...A db9 < /root/db9.sql	//故障主机使用备份文件恢复数据

指定主服务器信息
	]# grep master52 /root/db9.sql  //查看日志名及偏移量
	]# mysql -uroot -p123qqq...A
	mysql>change master to 	 master_host="192.168.4.52",master_user="repluser",master_password="123qqq...A", /
	master_log_file="master52.000001",master_log_pos=895;

启动slave进程
	mysql> start slave;
	
查看状态信息
	]# mysql -uroot -p123qqq...A -e "show slave status\G" |grep 192.168.4.52
	]# mysql -uroot -p123qqq...A -e "show slave status\G" |grep -i yes


2）配置管理服务器
修改配置文件，添加数据库服务器host51
	]# vim /etc/mha/app1.cnf
	[server1 ]
	hostname=192.168.4.51
	port=3306
	candidate_master=1

测试集群环境
	]# masterha_check_ssh --conf=/etc/mha/app1.cnf //测试SSH
	]# masterha_check_repl --conf=/etc/mha/app1.cnf//测试主从同步

重启管理服务
	]# masterha_stop  --conf=/etc/mha/app1.cnf //停止管理服务
	]# masterha_manager --conf=/etc/mha/app1.cnf  --remove_dead_master_conf --ignore_last_failover //启动管理服务
	
查看状态
	]# masterha_check_status  --conf=/etc/mha/app1.cnf	//服务运行，监视服务器













































